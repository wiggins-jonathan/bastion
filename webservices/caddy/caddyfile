{
  email {$EMAIL}
  log

  # Avoid rate-limiting by let's encrypt. Use for testing
  #acme_ca https://acme-staging-v02.api.letsencrypt.org/directory
}

(tls) {
  tls {
    dns cloudflare {$CLOUDFLARE_API_TOKEN}
  }
}

(globals) {
  header / {
    # Enable HTTP Strict Transport Security (HSTS)
    Strict-Transport-Security "max-age=31536000;"

    # Enable cross-site filter (XSS) and tell browser to block detected attacks
    X-XSS-Protection "1; mode=block"

    # Disallow the site to be rendered within a frame (clickjacking protection)
    X-Frame-Options "DENY"

    encode gzip                           # zips responses if not already
    -Server                               # Server name removing
    X-Robots-Tag "none"                   # Prevent search engines from indexing
    Permissions-Policy interest-cohort=() # Disable FLoC tracking
  }
}

(auth) {
  forward_auth 10.10.10.2:1000 {
    uri /api/verify?rd=https://auth.{$DOMAIN}
    copy_headers Remote-User Remote-Groups Remote-Name Remote-Email
  }
}

*.{$DOMAIN}, {$DOMAIN} {
  import tls
  import globals

  @www host www.{$DOMAIN}
  handle @www {
    redir https://{$DOMAIN}{uri}
  }

  @auth host auth.{$DOMAIN}
  handle @auth {
    reverse_proxy 10.10.10.2:1000
  }

  @domain host {$DOMAIN}
  handle @domain {
    respond "hello world"
  }

  @music host music.{$DOMAIN}
  handle @music {
    import auth
    reverse_proxy 10.10.10.2:4533
  }

  @vaultwarden host vaultwarden.{$DOMAIN}
  handle @vaultwarden {
    reverse_proxy /notifications/hub 10.10.10.2:3012  # websockets
    reverse_proxy 10.10.10.2:8081                     # webui
  }

  @torrents host torrents.{$DOMAIN}
  handle @torrents {
    import auth
    reverse_proxy 10.10.10.2:9091
  }

  @uptime host uptime.{$DOMAIN}
  handle @uptime {
    import auth
    reverse_proxy 10.10.10.2:3001
  }

  @ntfy host ntfy.{$DOMAIN}
  handle @ntfy {
    import auth
    reverse_proxy 10.10.10.2:8082
  }

  respond "404: Not Found" 404
}
